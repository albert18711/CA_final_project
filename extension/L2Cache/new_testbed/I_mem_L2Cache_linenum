0  //testoutput : store register $30 to memory 3FC                       
1  00000000000000000000000000000000 	 //nop                         nop                                                
2  001000_00000_111100000100100110010   //addi $30   $0               addi    r30,r0, 0x0932                             
3  000011_00000_000000000000000001000   //jal  8                      jal     OutputTestPort      		           
4  000011_00000_000000000000000001010   //jal  0A                     jal     FibunacciSeries     		           
5  000011_00000_000000000000000110010   //jal  35+5X, X=3             jal     BubbleSort                                            V   		     
6  001000_00000_111100000110101011101   //addi $30   $0   0d5d        addi    r30,r0, 0x0D5D      		           
7  000011_00000_000000000000000001000   //jal  8                      jal     OutputTestPort      		           
8  000010_00000_000000000000000111010   //j    3A                     j	   Trap
9  101011_00000_11110_0000001111111100  //sw   $30   $0  03FC         sw      r30, r0, 0x03FC    V (testport address: 255x4)        
10 000000_11111_000000000000000001000   //jr   $31                    jr      r31                 		           
11 000000_11111_0000011101_00000_100000 //add  $29  $31   $0          add     r29,r31,r0          		           
12 001000_00000_000110000000000010010 //addi $3  $0   18            addi    r3, r0, 0012      ( modify1 for 0-4181(number:20) r3 = 20-2 = 18 )       
13 001000_00000_0000100000_00000_000000 //addi $1  $0   0000          addi    r1, r0, 0x0000      		           
14 001000_00000_0001000000_00000_000001 //addi $2  $0   0001          addi    r2, r0, 0x0001      		           
15 001000_00000_0010000000_00000_000000 //addi $4  $0   0000          addi    r4, r0, 0x0000      		           
16 101011_00100_0000100000_00000_000000 //sw   $1  $4   0000          sw      r1, r4, 0x0000      		           
17 001000_00100_0010000000_00000_000100 //addi $4  $4   0004          addi    r4, r4, 0x0004      		           
18 101011_00100_0001000000_00000_000000 //sw   $2  $4   0000          sw      r2, r4, 0x0000      		           
19 000000_00001_0000011110_00000_100000 //add  $30  $1   $0           add     r30,r1, r0                                 
20 000011_00000_000000000000000001000   //jal  8                      jal     OutputTestPort                             
21 000000_00010_0000011110_00000_100000 //add  $30  $2   $0           add     r30,r2, r0                                 
22 000011_00000_000000000000000001000   //jal  8                      jal     OutputTestPort                             
23 000100_00011_000000000000000011010   //beq  $3  $0  B+5X, X=3      beq     r3, r0, FibunacciLoopExit                              V             
24 001000_00100_0010000000_00000_000100 //addi $4  $4   0004          addi    r4, r4, 0x0004                             
25 000000_00010_0000100101_00000_100000 //add  $5  $2   $1            add     r5, r2, r1          		           
26 000000_00010_0000000001_00000_100000 //add  $1  $2   $0            add     r1, r2, r0          		           
27 000000_00101_0000000010_00000_100000 //add  $2  $5   $0            add     r2, r5, r0          		           
28 101011_00100_0001000000_00000_000000 //sw   $2  $4   0000          sw      r2, r4, 0x0000      		           
29 001000_00011_0001111111_11111_111111 //addi $3  $3   ffff          addi    r3, r3, 0xffff      		           
30 000000_00010_0000011110_00000_100000 //add  $30  $2   $0           add     r30,r2, r0          		           
31 000011_00000_000000000000000001000   //jal  8                      jal     OutputTestPort 		                                  V
32 001000_00100_0010000000_00000_000100 //addi $4  $4   0004          addi    r4, r4, 0x0004                                         V
33 001000_00010_0100000000_00000_000001 //addi $8  $2   0001          addi    r8, r2, 0x0001                                         V
34 101011_00100_0100000000_00000_000000 //sw   $8  $4   0000          sw      r8, r4, 0x0000                                         V
35 000000_01000_0000011110_00000_100000 //add  $30  $8   $0           add     r30,r8, r0          	                                  V 
36 000011_00000_000000000000000001000   //jal  8                      jal     OutputTestPort                                         V
37 001000_00100_0010000000_00000_000100 //addi $4  $4   0004          addi    r4, r4, 0x0004                                         V
38 001000_00010_0100000000_00000_000010 //addi $8  $2   0002          addi    r8, r2, 0x0002                                         V
39 101011_00100_0100000000_00000_000000 //sw   $8  $4   0000          sw      r8, r4, 0x0000                                         V
40 000000_01000_0000011110_00000_100000 //add  $30  $8   $0           add     r30,r8, r0          	                                  V  
41 000011_00000_000000000000000001000   //jal  8                      jal     OutputTestPort                                         V
42 001000_00100_0010000000_00000_000100 //addi $4  $4   0004          addi    r4, r4, 0x0004                                         V
43 001000_00010_0100000000_00000_000011 //addi $8  $2   0003          addi    r8, r2, 0x0003                                         V
44 101011_00100_0100000000_00000_000000 //sw   $8  $4   0000          sw      r8, r4, 0x0000                                         V
45 000000_01000_0000011110_00000_100000 //add  $30  $8   $0           add     r30,r8, r0          	                                  V  
46 000011_00000_000000000000000001000   //jal  8                      jal     OutputTestPort      	                                  V	           
47 000010_00000_000000000000000010110   //j    16                     j       FibunacciLoop       		           
48 000000_00010_0001000010_00000_100010 //sub  $2  $2  $2             sub     r2, r2, r2          		           
49 000000_00001_0000100001_00000_100010 //sub  $1  $1  $1             sub     r1, r1, r1          		           
50 000000_11101_000000000000000001000   //jr   $29                    jr      r29                 		           
51 000000_11111_0000011101_00000_100000 //add  $29  $31   $0          add     r29,r31,r0          		           
52 001000_00000_001110000000100100100  //addi $7  $0  0124             addi    r7, r0, 0124  ( modify2 for r7 = 4*[(number-1)+(number-2)*3] = 292 ) V           
53 000100_00111_000000000000000001100   //beq  $7  $0  c              beq     r7, r0, BubbleOutLoopExit           
54 000000_00000_0000000001_00000_100000 //add  $1  $0   $0            add     r1, r0, r0          		    						                   
55 000100_00001_001110000000000001000   //beq  $1  $7  8              beq     r1, r7, BubbleInLoopExit                
56 100011_00001_0001100000_00000_000000 //lw   $3  $1  0000           lw      r3, r1, 0x0000                             
57 100011_00001_0010000000_00000_000100 //lw   $4  $1  0004           lw      r4, r1, 0x0004		                   
58 000000_00011_0010000101_00000_101010 //slt  $5  $4   $3            slt     r5, r3, r4                             
59 000100_00101_000000000000000000010   //beq  $5  $0  2              beq     r5, r0, SwapExit                       
60 101011_00001_0010000000_00000_000000 //sw   $4  $1   0000          sw      r4, r1, 0x0000                         
61 101011_00001_0001100000_00000_000100 //sw   $3  $1   0004          sw      r3, r1, 0x0004                         
62 001000_00001_0000100000_00000_000100 //add  $1  $1   0004          add     r1, r1, 0x0004                         
63 000010_00000_000000000000000110110   //j    27+5X, X=3             j       BubbleInLoop                                           V     
64 001000_00111_0011111111_11111_111100 //sub  $7  $7  0004           sub     r7, r7, 0x0004                         
65 000010_00000_000000000000000110100   //j    25+5X, X=3             j       BubbleOutLoop                                          V        
66 000000_00000_0000000001_00000_100000 //add  $1  $0   $0            add     r1, r0, r0                             
67 001000_00000_001110000000100101000   //addi $7  $0   0128            addi    r7, r0, 0128  ( modify3 for r7 = 4*[(number-2)+(number-2)*3] = 296 ) V   
68 000100_00001_001110000000000000100   //beq  $1  $7   4             beq     r1, r7, BubbleSortExit                 
69 100011_00001_1111000000_00000_000000 //lw   $30  $1  0000          lw      r30,r1, 0x0000                         
70 001000_00001_0000100000_00000_000100 //addi $1  $1   0004          addi    r1, r1, 0x0004                         
71 000011_00000_000000000000000001000   //jal  8                      jal     OutputTestPort                         
72 000010_00000_000000000000001000011   //j    34+5X, X=3             j       OutputSortedSeries                                     V             
73 000000_11101_000000000000000001000   //jr   $29                    jr      r29                                        
74 000010_00000_000000000000000111010   //j    3A+5X, X=3             j	   Trap                                                   V 
75 00000000000000000000000000000000     //nop                         nop                   